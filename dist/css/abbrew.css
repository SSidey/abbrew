@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");
:root {
  --tagify-dd-color-primary: rgb(53,149,246);
  --tagify-dd-bg-color: white;
  --tagify-dd-item-pad: .3em .5em;
}

.tagify {
  --tags-disabled-bg: #F1F1F1;
  --tags-border-color: #DDD;
  --tags-hover-border-color: #CCC;
  --tags-focus-border-color: #3595f6;
  --tag-border-radius: 3px;
  --tag-bg: #E5E5E5;
  --tag-hover: #D3E2E2;
  --tag-text-color: black;
  --tag-text-color--edit: black;
  --tag-pad: 0.3em 0.5em;
  --tag-inset-shadow-size: 1.1em;
  --tag-invalid-color: #D39494;
  --tag-invalid-bg: rgba(211, 148, 148, 0.5);
  --tag-remove-bg: rgba(211, 148, 148, 0.3);
  --tag-remove-btn-color: black;
  --tag-remove-btn-bg: none;
  --tag-remove-btn-bg--hover: #c77777;
  --input-color: inherit;
  --tag--min-width: 1ch;
  --tag--max-width: auto;
  --tag-hide-transition: 0.3s;
  --placeholder-color: rgba(0, 0, 0, 0.4);
  --placeholder-color-focus: rgba(0, 0, 0, 0.25);
  --loader-size: .8em;
  --readonly-striped: 1;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  border: 1px solid var(--tags-border-color);
  padding: 0;
  line-height: 0;
  cursor: text;
  outline: none;
  position: relative;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-transition: 0.1s;
  transition: 0.1s;
}
@-webkit-keyframes tags--bump {
  30% {
    -webkit-transform: scale(1.2);
    transform: scale(1.2);
  }
}
@keyframes tags--bump {
  30% {
    -webkit-transform: scale(1.2);
    transform: scale(1.2);
  }
}
@-webkit-keyframes rotateLoader {
  to {
    -webkit-transform: rotate(1turn);
    transform: rotate(1turn);
  }
}
@keyframes rotateLoader {
  to {
    -webkit-transform: rotate(1turn);
    transform: rotate(1turn);
  }
}
.tagify:hover:not(.tagify--focus):not(.tagify--invalid) {
  --tags-border-color: var(--tags-hover-border-color);
}
.tagify[disabled] {
  background: var(--tags-disabled-bg);
  -webkit-filter: saturate(0);
  filter: saturate(0);
  opacity: 0.5;
  pointer-events: none;
}
.tagify[readonly].tagify--select, .tagify[disabled].tagify--select {
  pointer-events: none;
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select), .tagify[disabled]:not(.tagify--mix):not(.tagify--select) {
  cursor: default;
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select) > .tagify__input, .tagify[disabled]:not(.tagify--mix):not(.tagify--select) > .tagify__input {
  visibility: hidden;
  width: 0;
  margin: 5px 0;
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div, .tagify[disabled]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div {
  padding: var(--tag-pad);
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div::before, .tagify[disabled]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div::before {
  -webkit-animation: readonlyStyles 1s calc(-1s * (var(--readonly-striped) - 1)) paused;
  animation: readonlyStyles 1s calc(-1s * (var(--readonly-striped) - 1)) paused;
}
@-webkit-keyframes readonlyStyles {
  0% {
    background: linear-gradient(45deg, var(--tag-bg) 25%, transparent 25%, transparent 50%, var(--tag-bg) 50%, var(--tag-bg) 75%, transparent 75%, transparent) 0/5px 5px;
    -webkit-box-shadow: none;
    box-shadow: none;
    -webkit-filter: brightness(0.95);
    filter: brightness(0.95);
  }
}
@keyframes readonlyStyles {
  0% {
    background: linear-gradient(45deg, var(--tag-bg) 25%, transparent 25%, transparent 50%, var(--tag-bg) 50%, var(--tag-bg) 75%, transparent 75%, transparent) 0/5px 5px;
    -webkit-box-shadow: none;
    box-shadow: none;
    -webkit-filter: brightness(0.95);
    filter: brightness(0.95);
  }
}
.tagify[readonly] .tagify__tag__removeBtn, .tagify[disabled] .tagify__tag__removeBtn {
  display: none;
}
.tagify--loading .tagify__input > br:last-child {
  display: none;
}
.tagify--loading .tagify__input::before {
  content: none;
}
.tagify--loading .tagify__input::after {
  content: "";
  vertical-align: middle;
  opacity: 1;
  width: 0.7em;
  height: 0.7em;
  width: var(--loader-size);
  height: var(--loader-size);
  min-width: 0;
  border: 3px solid;
  border-color: #EEE #BBB #888 transparent;
  border-radius: 50%;
  -webkit-animation: rotateLoader 0.4s infinite linear;
  animation: rotateLoader 0.4s infinite linear;
  content: "" !important;
  margin: -2px 0 -2px 0.5em;
}
.tagify--loading .tagify__input:empty::after {
  margin-left: 0;
}
.tagify + input,
.tagify + textarea {
  position: absolute !important;
  left: -9999em !important;
  -webkit-transform: scale(0) !important;
  -ms-transform: scale(0) !important;
  transform: scale(0) !important;
}
.tagify__tag {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin: 5px 0 5px 5px;
  position: relative;
  z-index: 1;
  outline: none;
  line-height: normal;
  cursor: default;
  -webkit-transition: 0.13s ease-out;
  transition: 0.13s ease-out;
}
.tagify__tag > div {
  vertical-align: top;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  max-width: 100%;
  padding: var(--tag-pad);
  color: var(--tag-text-color);
  line-height: inherit;
  border-radius: var(--tag-border-radius);
  white-space: nowrap;
  -webkit-transition: 0.13s ease-out;
  transition: 0.13s ease-out;
}
.tagify__tag > div > * {
  white-space: pre-wrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: inline-block;
  vertical-align: top;
  min-width: var(--tag--min-width);
  max-width: var(--tag--max-width);
  -webkit-transition: 0.8s ease, 0.1s color;
  transition: 0.8s ease, 0.1s color;
}
.tagify__tag > div > *[contenteditable] {
  outline: none;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  cursor: text;
  margin: -2px;
  padding: 2px;
  max-width: 350px;
}
.tagify__tag > div::before {
  content: "";
  position: absolute;
  border-radius: inherit;
  inset: var(--tag-bg-inset, 0);
  z-index: -1;
  pointer-events: none;
  -webkit-transition: 120ms ease;
  transition: 120ms ease;
  -webkit-animation: tags--bump 0.3s ease-out 1;
  animation: tags--bump 0.3s ease-out 1;
  -webkit-box-shadow: 0 0 0 var(--tag-inset-shadow-size) var(--tag-bg) inset;
  box-shadow: 0 0 0 var(--tag-inset-shadow-size) var(--tag-bg) inset;
}
.tagify__tag:hover:not([readonly]) div::before, .tagify__tag:focus div::before {
  --tag-bg-inset: -2.5px;
  --tag-bg: var(--tag-hover);
}
.tagify__tag--loading {
  pointer-events: none;
}
.tagify__tag--loading .tagify__tag__removeBtn {
  display: none;
}
.tagify__tag--loading::after {
  --loader-size: .4em;
  content: "";
  vertical-align: middle;
  opacity: 1;
  width: 0.7em;
  height: 0.7em;
  width: var(--loader-size);
  height: var(--loader-size);
  min-width: 0;
  border: 3px solid;
  border-color: #EEE #BBB #888 transparent;
  border-radius: 50%;
  -webkit-animation: rotateLoader 0.4s infinite linear;
  animation: rotateLoader 0.4s infinite linear;
  margin: 0 0.5em 0 -0.1em;
}
.tagify__tag--flash div::before {
  -webkit-animation: none;
  animation: none;
}
.tagify__tag--hide {
  width: 0 !important;
  padding-left: 0;
  padding-right: 0;
  margin-left: 0;
  margin-right: 0;
  opacity: 0;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
  -webkit-transition: var(--tag-hide-transition);
  transition: var(--tag-hide-transition);
  pointer-events: none;
}
.tagify__tag--hide > div > * {
  white-space: nowrap;
}
.tagify__tag.tagify--noAnim > div::before {
  -webkit-animation: none;
  animation: none;
}
.tagify__tag.tagify--notAllowed:not(.tagify__tag--editable) div > span {
  opacity: 0.5;
}
.tagify__tag.tagify--notAllowed:not(.tagify__tag--editable) div::before {
  --tag-bg: var(--tag-invalid-bg);
  -webkit-transition: 0.2s;
  transition: 0.2s;
}
.tagify__tag[readonly] .tagify__tag__removeBtn {
  display: none;
}
.tagify__tag[readonly] > div::before {
  -webkit-animation: readonlyStyles 1s calc(-1s * (var(--readonly-striped) - 1)) paused;
  animation: readonlyStyles 1s calc(-1s * (var(--readonly-striped) - 1)) paused;
}
@keyframes readonlyStyles {
  0% {
    background: linear-gradient(45deg, var(--tag-bg) 25%, transparent 25%, transparent 50%, var(--tag-bg) 50%, var(--tag-bg) 75%, transparent 75%, transparent) 0/5px 5px;
    -webkit-box-shadow: none;
    box-shadow: none;
    -webkit-filter: brightness(0.95);
    filter: brightness(0.95);
  }
}
.tagify__tag--editable > div {
  color: var(--tag-text-color--edit);
}
.tagify__tag--editable > div::before {
  -webkit-box-shadow: 0 0 0 2px var(--tag-hover) inset !important;
  box-shadow: 0 0 0 2px var(--tag-hover) inset !important;
}
.tagify__tag--editable > .tagify__tag__removeBtn {
  pointer-events: none;
}
.tagify__tag--editable > .tagify__tag__removeBtn::after {
  opacity: 0;
  -webkit-transform: translateX(100%) translateX(5px);
  -ms-transform: translateX(100%) translateX(5px);
  transform: translateX(100%) translateX(5px);
}
.tagify__tag--editable.tagify--invalid > div::before {
  -webkit-box-shadow: 0 0 0 2px var(--tag-invalid-color) inset !important;
  box-shadow: 0 0 0 2px var(--tag-invalid-color) inset !important;
}
.tagify__tag__removeBtn {
  -webkit-box-ordinal-group: 6;
  -ms-flex-order: 5;
  order: 5;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 50px;
  cursor: pointer;
  font: 14px/1 Arial;
  background: var(--tag-remove-btn-bg);
  color: var(--tag-remove-btn-color);
  width: 14px;
  height: 14px;
  margin-right: 4.6666666667px;
  margin-left: auto;
  overflow: hidden;
  -webkit-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
}
.tagify__tag__removeBtn::after {
  content: "×";
  -webkit-transition: 0.3s, color 0s;
  transition: 0.3s, color 0s;
}
.tagify__tag__removeBtn:hover {
  color: white;
  background: var(--tag-remove-btn-bg--hover);
}
.tagify__tag__removeBtn:hover + div > span {
  opacity: 0.5;
}
.tagify__tag__removeBtn:hover + div::before {
  -webkit-box-shadow: 0 0 0 var(--tag-inset-shadow-size) var(--tag-remove-bg, rgba(211, 148, 148, 0.3)) inset !important;
  box-shadow: 0 0 0 var(--tag-inset-shadow-size) var(--tag-remove-bg, rgba(211, 148, 148, 0.3)) inset !important;
  -webkit-transition: -webkit-box-shadow 0.2s;
  transition: -webkit-box-shadow 0.2s;
  transition: box-shadow 0.2s;
  transition: box-shadow 0.2s, -webkit-box-shadow 0.2s;
}
.tagify:not(.tagify--mix) .tagify__input br {
  display: none;
}
.tagify:not(.tagify--mix) .tagify__input * {
  display: inline;
  white-space: nowrap;
}
.tagify__input {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: inline-block;
  min-width: 110px;
  margin: 5px;
  padding: var(--tag-pad);
  line-height: normal;
  position: relative;
  white-space: pre-wrap;
  color: var(--input-color);
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
  /* Seems firefox newer versions don't need this any more
  @supports ( -moz-appearance:none ){
      &::before{
          line-height: inherit;
          position:relative;
      }
  }
  */
}
@-moz-document url-prefix() {}
.tagify__input:empty::before {
  position: static;
}
.tagify__input:focus {
  outline: none;
}
.tagify__input:focus::before {
  -webkit-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
  opacity: 0;
  -webkit-transform: translatex(6px);
  -ms-transform: translatex(6px);
  transform: translatex(6px);
  /* ALL MS BROWSERS: hide placeholder (on focus) otherwise the caret is placed after it, which is weird */
  /* IE Edge 12+ CSS styles go here */
}
@supports (-ms-ime-align: auto) {
  .tagify__input:focus::before {
    display: none;
  }
}
.tagify__input:focus:empty::before {
  -webkit-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
  opacity: 1;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  color: rgba(0, 0, 0, 0.25);
  color: var(--placeholder-color-focus);
}
@-moz-document url-prefix() {
  .tagify__input:focus:empty::after {
    display: none;
  }
}
.tagify__input::before {
  content: attr(data-placeholder);
  height: 1em;
  line-height: 1em;
  margin: auto 0;
  z-index: 1;
  color: var(--placeholder-color);
  white-space: nowrap;
  pointer-events: none;
  opacity: 0;
  position: absolute;
}
.tagify__input::after {
  content: attr(data-suggest);
  display: inline-block;
  vertical-align: middle;
  position: absolute;
  min-width: calc(100% - 1.5em);
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: pre; /* allows spaces at the beginning */
  color: var(--tag-text-color);
  opacity: 0.3;
  pointer-events: none;
  max-width: 100px;
}
.tagify__input .tagify__tag {
  margin: 0 1px;
}
.tagify--mix {
  display: block;
}
.tagify--mix .tagify__input {
  padding: 5px;
  margin: 0;
  width: 100%;
  height: 100%;
  line-height: 1.5;
  display: block;
}
.tagify--mix .tagify__input::before {
  height: auto;
  display: none;
  line-height: inherit;
}
.tagify--mix .tagify__input::after {
  content: none;
}
.tagify--select::after {
  content: ">";
  opacity: 0.5;
  position: absolute;
  top: 50%;
  right: 0;
  bottom: 0;
  font: 16px monospace;
  line-height: 8px;
  height: 8px;
  pointer-events: none;
  -webkit-transform: translate(-150%, -50%) scaleX(1.2) rotate(90deg);
  -ms-transform: translate(-150%, -50%) scaleX(1.2) rotate(90deg);
  transform: translate(-150%, -50%) scaleX(1.2) rotate(90deg);
  -webkit-transition: 0.2s ease-in-out;
  transition: 0.2s ease-in-out;
}
.tagify--select[aria-expanded=true]::after {
  -webkit-transform: translate(-150%, -50%) rotate(270deg) scaleY(1.2);
  -ms-transform: translate(-150%, -50%) rotate(270deg) scaleY(1.2);
  transform: translate(-150%, -50%) rotate(270deg) scaleY(1.2);
}
.tagify--select .tagify__tag {
  position: absolute;
  top: 0;
  right: 1.8em;
  bottom: 0;
}
.tagify--select .tagify__tag div {
  display: none;
}
.tagify--select .tagify__input {
  width: 100%;
}
.tagify--empty .tagify__input::before {
  -webkit-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
  opacity: 1;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  display: inline-block;
  width: auto;
}
.tagify--mix .tagify--empty .tagify__input::before {
  display: inline-block;
}
.tagify--focus {
  --tags-border-color: var(--tags-focus-border-color);
  -webkit-transition: 0s;
  transition: 0s;
}
.tagify--invalid {
  --tags-border-color: #D39494;
}
.tagify__dropdown {
  position: absolute;
  z-index: 9999;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
  overflow: hidden;
}
.tagify__dropdown[placement=top] {
  margin-top: 0;
  -webkit-transform: translateY(-100%);
  -ms-transform: translateY(-100%);
  transform: translateY(-100%);
}
.tagify__dropdown[placement=top] .tagify__dropdown__wrapper {
  border-top-width: 1.1px;
  border-bottom-width: 0;
}
.tagify__dropdown[position=text] {
  -webkit-box-shadow: 0 0 0 3px rgba(var(--tagify-dd-color-primary), 0.1);
  box-shadow: 0 0 0 3px rgba(var(--tagify-dd-color-primary), 0.1);
  font-size: 0.9em;
}
.tagify__dropdown[position=text] .tagify__dropdown__wrapper {
  border-width: 1px;
}
.tagify__dropdown__wrapper {
  max-height: 300px;
  overflow: auto;
  overflow-x: hidden;
  background: var(--tagify-dd-bg-color);
  border: 1px solid;
  border-color: var(--tagify-dd-color-primary);
  border-bottom-width: 1.5px;
  border-top-width: 0;
  -webkit-box-shadow: 0 2px 4px -2px rgba(0, 0, 0, 0.2);
  box-shadow: 0 2px 4px -2px rgba(0, 0, 0, 0.2);
  -webkit-transition: 0.25s cubic-bezier(0, 1, 0.5, 1);
  transition: 0.25s cubic-bezier(0, 1, 0.5, 1);
}
.tagify__dropdown__header:empty {
  display: none;
}
.tagify__dropdown__footer {
  display: inline-block;
  margin-top: 0.5em;
  padding: var(--tagify-dd-item-pad);
  font-size: 0.7em;
  font-style: italic;
  opacity: 0.5;
}
.tagify__dropdown__footer:empty {
  display: none;
}
.tagify__dropdown--initial .tagify__dropdown__wrapper {
  max-height: 20px;
  -webkit-transform: translateY(-1em);
  -ms-transform: translateY(-1em);
  transform: translateY(-1em);
}
.tagify__dropdown--initial[placement=top] .tagify__dropdown__wrapper {
  -webkit-transform: translateY(2em);
  -ms-transform: translateY(2em);
  transform: translateY(2em);
}
.tagify__dropdown__item {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: var(--tagify-dd-item-pad);
  margin: 1px;
  cursor: pointer;
  border-radius: 2px;
  position: relative;
  outline: none;
  max-height: 60px;
  max-width: 100%;
  /* custom hidden transition effect is needed for horizontal-layout suggestions */
}
.tagify__dropdown__item--active {
  background: var(--tagify-dd-color-primary);
  color: white;
}
.tagify__dropdown__item:active {
  -webkit-filter: brightness(105%);
  filter: brightness(105%);
}
.tagify__dropdown__item--hidden {
  padding-top: 0;
  padding-bottom: 0;
  margin: 0 1px;
  pointer-events: none;
  overflow: hidden;
  max-height: 0;
  -webkit-transition: var(--tagify-dd-item--hidden-duration, 0.3s) !important;
  transition: var(--tagify-dd-item--hidden-duration, 0.3s) !important;
}
.tagify__dropdown__item--hidden > * {
  -webkit-transform: translateY(-100%);
  -ms-transform: translateY(-100%);
  transform: translateY(-100%);
  opacity: 0;
  -webkit-transition: inherit;
  transition: inherit;
}

/* Global styles */
.window-app {
  font-family: "Roboto", sans-serif;
}

.rollable:hover, .rollable:focus {
  color: #000;
  text-shadow: 0 0 10px red;
  cursor: pointer;
}

.grid,
.grid-2col {
  display: grid;
  grid-column: span 2/span 2;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 10px;
  margin: 10px 0;
  padding: 0;
}

.grid-3col {
  grid-column: span 3/span 3;
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid-4col {
  grid-column: span 4/span 4;
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

.grid-5col {
  grid-column: span 5/span 5;
  grid-template-columns: repeat(5, minmax(0, 1fr));
}

.grid-6col {
  grid-column: span 6/span 6;
  grid-template-columns: repeat(6, minmax(0, 1fr));
}

.grid-7col {
  grid-column: span 7/span 7;
  grid-template-columns: repeat(7, minmax(0, 1fr));
}

.grid-8col {
  grid-column: span 8/span 8;
  grid-template-columns: repeat(8, minmax(0, 1fr));
}

.grid-9col {
  grid-column: span 9/span 9;
  grid-template-columns: repeat(9, minmax(0, 1fr));
}

.grid-10col {
  grid-column: span 10/span 10;
  grid-template-columns: repeat(10, minmax(0, 1fr));
}

.grid-11col {
  grid-column: span 11/span 11;
  grid-template-columns: repeat(11, minmax(0, 1fr));
}

.grid-12col {
  grid-column: span 12/span 12;
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

.grid-start-2 {
  grid-column-start: 2;
}

.grid-start-3 {
  grid-column-start: 3;
}

.grid-start-4 {
  grid-column-start: 4;
}

.grid-start-5 {
  grid-column-start: 5;
}

.grid-start-6 {
  grid-column-start: 6;
}

.grid-start-7 {
  grid-column-start: 7;
}

.grid-start-8 {
  grid-column-start: 8;
}

.grid-start-9 {
  grid-column-start: 9;
}

.grid-start-10 {
  grid-column-start: 10;
}

.grid-start-11 {
  grid-column-start: 11;
}

.grid-start-12 {
  grid-column-start: 12;
}

.grid-span-2 {
  grid-column-end: span 2;
}

.grid-span-3 {
  grid-column-end: span 3;
}

.grid-span-4 {
  grid-column-end: span 4;
}

.grid-span-5 {
  grid-column-end: span 5;
}

.grid-span-6 {
  grid-column-end: span 6;
}

.grid-span-7 {
  grid-column-end: span 7;
}

.grid-span-8 {
  grid-column-end: span 8;
}

.grid-span-9 {
  grid-column-end: span 9;
}

.grid-span-10 {
  grid-column-end: span 10;
}

.grid-span-11 {
  grid-column-end: span 11;
}

.grid-span-12 {
  grid-column-end: span 12;
}

.flex-group-center,
.flex-group-left,
.flex-group-right {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
}

.flex-group-left {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  text-align: left;
}

.flex-group-right {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  text-align: right;
}

.flexshrink {
  -webkit-box-flex: 0;
  -ms-flex: 0;
  flex: 0;
}

.flex-between {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.flexlarge {
  -webkit-box-flex: 2;
  -ms-flex: 2;
  flex: 2;
}

.align-left {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  text-align: left;
}

.align-right {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  text-align: right;
}

.align-center {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  text-align: center;
}

/* Styles limited to abbrew sheets */
.abbrew .item-form {
  font-family: "Roboto", sans-serif;
}
.abbrew .sheet-header {
  -webkit-box-flex: 0;
  -ms-flex: 0 auto;
  flex: 0 auto;
  overflow: hidden;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin-bottom: 10px;
}
.abbrew .sheet-header .profile-img {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 100px;
  flex: 0 0 100px;
  height: 100px;
  margin-right: 10px;
}
.abbrew .sheet-header .header-fields {
  -webkit-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
}
.abbrew .sheet-header h1.charname {
  height: 50px;
  padding: 0px;
  margin: 5px 0;
  border-bottom: 0;
}
.abbrew .sheet-header h1.charname input {
  width: 100%;
  height: 100%;
  margin: 0;
}
.abbrew .sheet-tabs {
  -webkit-box-flex: 0;
  -ms-flex: 0;
  flex: 0;
}
.abbrew .sheet-body,
.abbrew .sheet-body .tab,
.abbrew .sheet-body .tab .editor {
  height: 100%;
}
.abbrew .tox .tox-editor-container {
  background: #fff;
}
.abbrew .tox .tox-edit-area {
  padding: 0 8px;
}
.abbrew .resource-label {
  font-weight: bold;
}
.abbrew .items-header {
  height: 28px;
  margin: 2px 0;
  padding: 0;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: rgba(0, 0, 0, 0.05);
  border: 2px groove #eeede0;
  font-weight: bold;
}
.abbrew .items-header > * {
  font-size: 14px;
  text-align: center;
}
.abbrew .items-header .item-name {
  font-weight: bold;
  padding-left: 5px;
  text-align: left;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.abbrew .items-list {
  list-style: none;
  margin: 0;
  padding: 0;
  overflow-y: auto;
  scrollbar-width: thin;
  color: #444;
}
.abbrew .items-list .item-list {
  list-style: none;
  margin: 0;
  padding: 0;
}
.abbrew .items-list .item-name {
  -webkit-box-flex: 2;
  -ms-flex: 2;
  flex: 2;
  margin: 0;
  overflow: hidden;
  font-size: 13px;
  text-align: left;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.abbrew .items-list .item-name h3,
.abbrew .items-list .item-name h4 {
  margin: 0;
  white-space: nowrap;
  overflow-x: hidden;
}
.abbrew .items-list .item-controls {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
  -ms-flex: 0 0 100px;
  flex: 0 0 100px;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}
.abbrew .items-list .item-controls a {
  font-size: 12px;
  text-align: center;
  margin: 0 6px;
}
.abbrew .items-list .item {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 2px;
  border-bottom: 1px solid #c9c7b8;
}
.abbrew .items-list .item:last-child {
  border-bottom: none;
}
.abbrew .items-list .item .item-name {
  color: #191813;
}
.abbrew .items-list .item .item-name .item-image {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 30px;
  flex: 0 0 30px;
  height: 30px;
  background-size: 30px;
  border: none;
  margin-right: 5px;
}
.abbrew .items-list .item-prop {
  text-align: center;
  border-left: 1px solid #c9c7b8;
  border-right: 1px solid #c9c7b8;
  font-size: 12px;
}
.abbrew .items-list .items-header {
  height: 28px;
  margin: 2px 0;
  padding: 0;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: rgba(0, 0, 0, 0.05);
  border: 2px groove #eeede0;
  font-weight: bold;
}
.abbrew .items-list .items-header > * {
  font-size: 12px;
  text-align: center;
}
.abbrew .items-list .items-header .item-name {
  padding-left: 5px;
  text-align: left;
}
.abbrew .item-formula {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 200px;
  flex: 0 0 200px;
  padding: 0 8px;
}
.abbrew ol li.damage-reduction {
  list-style-type: none;
}
.abbrew .item.item-row {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
}
.abbrew .item.item-row .item-name {
  display: grid;
  grid-column: 1/7;
  grid-template-columns: repeat(7, 1fr);
}
.abbrew .item.item-row .item-name .item-image {
  grid-column: 1/2;
  height: 30px;
  background-size: 30px;
  border: none;
  margin-right: 5px;
}
.abbrew .item.item-row .item-name h4 {
  grid-column: 2/8;
}
.abbrew .item.item-row .item-equipState {
  grid-column: 7/8;
}
.abbrew .item.item-row .icon-label {
  grid-column: 8/9;
}
.abbrew .item.item-row .item-controls {
  display: grid;
  grid-column: 9/11;
  grid-template-columns: repeat(2, 1fr);
}
.abbrew .item.item-row .item-controls a {
  font-size: 12px;
  text-align: center;
  margin: 0 6px;
}
.abbrew .effects .item .effect-source,
.abbrew .effects .item .effect-duration,
.abbrew .effects .item .effect-controls {
  text-align: center;
  border-left: 1px solid #c9c7b8;
  border-right: 1px solid #c9c7b8;
  font-size: 12px;
}
.abbrew .effects .item .effect-controls {
  border: none;
}
.abbrew ol.skill-container {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  list-style-type: none;
}
.abbrew .skill {
  position: relative;
}
.abbrew div.skill-card {
  height: 200px;
  border: thin solid rgb(0, 0, 0);
  border-radius: 2%;
  padding: 0.2em;
  margin: 2px;
  display: grid;
  grid-template-rows: repeat(8, 1fr);
}
.abbrew .skill-name {
  justify-self: center;
}
.abbrew .skill-image {
  display: grid;
  grid-row: span 5;
  width: 80%;
  justify-self: center;
}
.abbrew .skill-controls {
  float: right;
  position: absolute;
  right: 0px;
  bottom: 0px;
  z-index: 1000;
  padding: 5px;
  color: #383131;
  font-weight: bold;
  margin: 2px;
  border-radius: 2%;
}
.abbrew label.slide-toggle > input {
  display: none;
}
.abbrew ol.action-container {
  list-style-type: none;
}
.abbrew ol.resource-requirement-container {
  list-style-type: none;
}
.abbrew ol.damage-modifier-container {
  list-style-type: none;
}
.abbrew li.action {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  list-style-type: none;
}
.abbrew .skill-attribute-increase {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.abbrew li.attack-profile {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  list-style: none;
}
.abbrew ol.attack-profiles {
  list-style: none;
}
.abbrew button.attack-damage-button {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}
.abbrew span.actions-icon {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}
.abbrew span.actions-icon::before {
  display: inline-block;
  content: "";
  width: 24px;
  height: 24px;
  background-size: contain;
  background-repeat: no-repeat;
}
.abbrew span.actions-icon.action-fa::before {
  background-image: url("../../abbrew/assets/icons/actions/fa.webp");
}
.abbrew span.actions-icon.action-1a::before {
  background-image: url("../../abbrew/assets/icons/actions/1a.webp");
}
.abbrew span.actions-icon.action-2a::before {
  background-image: url("../../abbrew/assets/icons/actions/2a.webp");
}
.abbrew span.actions-icon.action-3a::before {
  background-image: url("../../abbrew/assets/icons/actions/3a.webp");
}
.abbrew span.actions-icon.action-4a::before {
  background-image: url("../../abbrew/assets/icons/actions/4a.webp");
}
.abbrew span.actions-icon.action-5a::before {
  background-image: url("../../abbrew/assets/icons/actions/5a.webp");
}
.abbrew ol.wound-container {
  list-style-type: none;
  padding-left: 0;
}
.abbrew .wound {
  position: relative;
  display: inline-block;
  height: 40px;
  width: 40px;
}
.abbrew .wound-container li.wound img {
  height: 40px;
  width: 40px;
}
.abbrew .wound-value {
  float: right;
  position: absolute;
  right: 0px;
  bottom: 0px;
  z-index: 1000;
  background-color: #000000;
  color: #FFFFFF;
  font-weight: bold;
  text-shadow: #000000 0px 0px 10px;
  font-size: 1rem;
}
.abbrew .wound-details {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}
.abbrew .wound-modifier-container {
  list-style-type: none;
}
.abbrew .background-attribute-tab {
  display: grid;
  grid-template-rows: auto;
  gap: 1em;
}
.abbrew .background-attributes {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  height: 208px;
}
.abbrew .background-attributes-column {
  display: grid;
  grid-template-rows: repeat(8, 1fr);
  grid-auto-flow: row;
}
.abbrew ol.background-skills {
  padding-left: 0px;
}
.abbrew li.background-skill {
  list-style-type: none;
}
.abbrew li.background-skill:not(:last-child) {
  margin-bottom: 3px;
}
.abbrew .background-summary {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  border: 1px solid;
}
.abbrew .background-summary div.image-container {
  grid-column: 1/2;
  height: 50px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border-right: 1px black solid;
}
.abbrew .background-summary div.image-container img {
  height: 50px;
  width: auto;
  border: none;
}
.abbrew .background-summary div.name {
  grid-column: 2/10;
  height: 50px;
  line-height: 50px;
  text-align: center;
  background: rgba(0, 0, 0, 0.05);
}
.abbrew .background-summary div.name span {
  display: inline-block;
  vertical-align: middle;
  line-height: normal;
}
.abbrew .background-summary a {
  grid-column: 10/11;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.abbrew .background-summary a i {
  display: block;
}
.abbrew .empty-summary-element {
  background: rgba(0, 0, 0, 0.05);
  height: 50px;
  line-height: 50px;
  text-align: center;
}
.abbrew .empty-summary-element span {
  display: inline-block;
  vertical-align: middle;
  line-height: normal;
}
.abbrew .icon-label {
  display: grid;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.abbrew span.icon::before {
  display: inline-block;
  content: "";
  width: 24px;
  height: 24px;
  background-size: contain;
  background-repeat: no-repeat;
}
.abbrew span.icon.icon-sunder-c::before {
  background-image: url("../../abbrew/assets/icons/icons/sunder_c.svg");
}
.abbrew span.icon.icon-sunder-u::before {
  background-image: url("../../abbrew/assets/icons/icons/sunder_u.svg");
}
.abbrew input[type=checkbox].armour-sunder {
  /* Add if not using autoprefixer */
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  display: none;
  /* For iOS < 15 to remove gradient background */
  background-color: #fff;
  /* Not removed via appearance */
  margin: 0;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
