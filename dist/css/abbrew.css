@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");
:root {
  --tagify-dd-color-primary: rgb(53,149,246);
  --tagify-dd-bg-color: white;
  --tagify-dd-item-pad: .3em .5em;
}

.tagify {
  --tags-disabled-bg: #F1F1F1;
  --tags-border-color: #DDD;
  --tags-hover-border-color: #CCC;
  --tags-focus-border-color: #3595f6;
  --tag-border-radius: 3px;
  --tag-bg: #E5E5E5;
  --tag-hover: #D3E2E2;
  --tag-text-color: black;
  --tag-text-color--edit: black;
  --tag-pad: 0.3em 0.5em;
  --tag-inset-shadow-size: 1.1em;
  --tag-invalid-color: #D39494;
  --tag-invalid-bg: rgba(211, 148, 148, 0.5);
  --tag-remove-bg: rgba(211, 148, 148, 0.3);
  --tag-remove-btn-color: black;
  --tag-remove-btn-bg: none;
  --tag-remove-btn-bg--hover: #c77777;
  --input-color: inherit;
  --tag--min-width: 1ch;
  --tag--max-width: auto;
  --tag-hide-transition: 0.3s;
  --placeholder-color: rgba(0, 0, 0, 0.4);
  --placeholder-color-focus: rgba(0, 0, 0, 0.25);
  --loader-size: .8em;
  --readonly-striped: 1;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  border: 1px solid var(--tags-border-color);
  padding: 0;
  line-height: 0;
  cursor: text;
  outline: none;
  position: relative;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-transition: 0.1s;
  -o-transition: 0.1s;
  transition: 0.1s;
}
@-webkit-keyframes tags--bump {
  30% {
    -webkit-transform: scale(1.2);
    transform: scale(1.2);
  }
}
@keyframes tags--bump {
  30% {
    -webkit-transform: scale(1.2);
    transform: scale(1.2);
  }
}
@-webkit-keyframes rotateLoader {
  to {
    -webkit-transform: rotate(1turn);
    transform: rotate(1turn);
  }
}
@keyframes rotateLoader {
  to {
    -webkit-transform: rotate(1turn);
    transform: rotate(1turn);
  }
}
.tagify:hover:not(.tagify--focus):not(.tagify--invalid) {
  --tags-border-color: var(--tags-hover-border-color);
}
.tagify[disabled] {
  background: var(--tags-disabled-bg);
  -webkit-filter: saturate(0);
  filter: saturate(0);
  opacity: 0.5;
  pointer-events: none;
}
.tagify[readonly].tagify--select, .tagify[disabled].tagify--select {
  pointer-events: none;
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select), .tagify[disabled]:not(.tagify--mix):not(.tagify--select) {
  cursor: default;
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select) > .tagify__input, .tagify[disabled]:not(.tagify--mix):not(.tagify--select) > .tagify__input {
  visibility: hidden;
  width: 0;
  margin: 5px 0;
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div, .tagify[disabled]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div {
  padding: var(--tag-pad);
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div::before, .tagify[disabled]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div::before {
  -webkit-animation: readonlyStyles 1s calc(-1s * (var(--readonly-striped) - 1)) paused;
  animation: readonlyStyles 1s calc(-1s * (var(--readonly-striped) - 1)) paused;
}
@-webkit-keyframes readonlyStyles {
  0% {
    background: linear-gradient(45deg, var(--tag-bg) 25%, transparent 25%, transparent 50%, var(--tag-bg) 50%, var(--tag-bg) 75%, transparent 75%, transparent) 0/5px 5px;
    -webkit-box-shadow: none;
    box-shadow: none;
    -webkit-filter: brightness(0.95);
    filter: brightness(0.95);
  }
}
@keyframes readonlyStyles {
  0% {
    background: -o-linear-gradient(45deg, var(--tag-bg) 25%, transparent 25%, transparent 50%, var(--tag-bg) 50%, var(--tag-bg) 75%, transparent 75%, transparent) 0/5px 5px;
    background: linear-gradient(45deg, var(--tag-bg) 25%, transparent 25%, transparent 50%, var(--tag-bg) 50%, var(--tag-bg) 75%, transparent 75%, transparent) 0/5px 5px;
    -webkit-box-shadow: none;
    box-shadow: none;
    -webkit-filter: brightness(0.95);
    filter: brightness(0.95);
  }
}
.tagify[readonly] .tagify__tag__removeBtn, .tagify[disabled] .tagify__tag__removeBtn {
  display: none;
}
.tagify--loading .tagify__input > br:last-child {
  display: none;
}
.tagify--loading .tagify__input::before {
  content: none;
}
.tagify--loading .tagify__input::after {
  content: "";
  vertical-align: middle;
  opacity: 1;
  width: 0.7em;
  height: 0.7em;
  width: var(--loader-size);
  height: var(--loader-size);
  min-width: 0;
  border: 3px solid;
  border-color: #EEE #BBB #888 transparent;
  border-radius: 50%;
  -webkit-animation: rotateLoader 0.4s infinite linear;
  animation: rotateLoader 0.4s infinite linear;
  content: "" !important;
  margin: -2px 0 -2px 0.5em;
}
.tagify--loading .tagify__input:empty::after {
  margin-left: 0;
}
.tagify + input,
.tagify + textarea {
  position: absolute !important;
  left: -9999em !important;
  -webkit-transform: scale(0) !important;
  -ms-transform: scale(0) !important;
  transform: scale(0) !important;
}
.tagify__tag {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin: 5px 0 5px 5px;
  position: relative;
  z-index: 1;
  outline: none;
  line-height: normal;
  cursor: default;
  -webkit-transition: 0.13s ease-out;
  -o-transition: 0.13s ease-out;
  transition: 0.13s ease-out;
}
.tagify__tag > div {
  vertical-align: top;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  max-width: 100%;
  padding: var(--tag-pad);
  color: var(--tag-text-color);
  line-height: inherit;
  border-radius: var(--tag-border-radius);
  white-space: nowrap;
  -webkit-transition: 0.13s ease-out;
  -o-transition: 0.13s ease-out;
  transition: 0.13s ease-out;
}
.tagify__tag > div > * {
  white-space: pre-wrap;
  overflow: hidden;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  display: inline-block;
  vertical-align: top;
  min-width: var(--tag--min-width);
  max-width: var(--tag--max-width);
  -webkit-transition: 0.8s ease, 0.1s color;
  -o-transition: 0.8s ease, 0.1s color;
  transition: 0.8s ease, 0.1s color;
}
.tagify__tag > div > *[contenteditable] {
  outline: none;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  cursor: text;
  margin: -2px;
  padding: 2px;
  max-width: 350px;
}
.tagify__tag > div::before {
  content: "";
  position: absolute;
  border-radius: inherit;
  inset: var(--tag-bg-inset, 0);
  z-index: -1;
  pointer-events: none;
  -webkit-transition: 120ms ease;
  -o-transition: 120ms ease;
  transition: 120ms ease;
  -webkit-animation: tags--bump 0.3s ease-out 1;
  animation: tags--bump 0.3s ease-out 1;
  -webkit-box-shadow: 0 0 0 var(--tag-inset-shadow-size) var(--tag-bg) inset;
  box-shadow: 0 0 0 var(--tag-inset-shadow-size) var(--tag-bg) inset;
}
.tagify__tag:hover:not([readonly]) div::before, .tagify__tag:focus div::before {
  --tag-bg-inset: -2.5px;
  --tag-bg: var(--tag-hover);
}
.tagify__tag--loading {
  pointer-events: none;
}
.tagify__tag--loading .tagify__tag__removeBtn {
  display: none;
}
.tagify__tag--loading::after {
  --loader-size: .4em;
  content: "";
  vertical-align: middle;
  opacity: 1;
  width: 0.7em;
  height: 0.7em;
  width: var(--loader-size);
  height: var(--loader-size);
  min-width: 0;
  border: 3px solid;
  border-color: #EEE #BBB #888 transparent;
  border-radius: 50%;
  -webkit-animation: rotateLoader 0.4s infinite linear;
  animation: rotateLoader 0.4s infinite linear;
  margin: 0 0.5em 0 -0.1em;
}
.tagify__tag--flash div::before {
  -webkit-animation: none;
  animation: none;
}
.tagify__tag--hide {
  width: 0 !important;
  padding-left: 0;
  padding-right: 0;
  margin-left: 0;
  margin-right: 0;
  opacity: 0;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
  -webkit-transition: var(--tag-hide-transition);
  -o-transition: var(--tag-hide-transition);
  transition: var(--tag-hide-transition);
  pointer-events: none;
}
.tagify__tag--hide > div > * {
  white-space: nowrap;
}
.tagify__tag.tagify--noAnim > div::before {
  -webkit-animation: none;
  animation: none;
}
.tagify__tag.tagify--notAllowed:not(.tagify__tag--editable) div > span {
  opacity: 0.5;
}
.tagify__tag.tagify--notAllowed:not(.tagify__tag--editable) div::before {
  --tag-bg: var(--tag-invalid-bg);
  -webkit-transition: 0.2s;
  -o-transition: 0.2s;
  transition: 0.2s;
}
.tagify__tag[readonly] .tagify__tag__removeBtn {
  display: none;
}
.tagify__tag[readonly] > div::before {
  -webkit-animation: readonlyStyles 1s calc(-1s * (var(--readonly-striped) - 1)) paused;
  animation: readonlyStyles 1s calc(-1s * (var(--readonly-striped) - 1)) paused;
}
@keyframes readonlyStyles {
  0% {
    background: -o-linear-gradient(45deg, var(--tag-bg) 25%, transparent 25%, transparent 50%, var(--tag-bg) 50%, var(--tag-bg) 75%, transparent 75%, transparent) 0/5px 5px;
    background: linear-gradient(45deg, var(--tag-bg) 25%, transparent 25%, transparent 50%, var(--tag-bg) 50%, var(--tag-bg) 75%, transparent 75%, transparent) 0/5px 5px;
    -webkit-box-shadow: none;
    box-shadow: none;
    -webkit-filter: brightness(0.95);
    filter: brightness(0.95);
  }
}
.tagify__tag--editable > div {
  color: var(--tag-text-color--edit);
}
.tagify__tag--editable > div::before {
  -webkit-box-shadow: 0 0 0 2px var(--tag-hover) inset !important;
  box-shadow: 0 0 0 2px var(--tag-hover) inset !important;
}
.tagify__tag--editable > .tagify__tag__removeBtn {
  pointer-events: none;
}
.tagify__tag--editable > .tagify__tag__removeBtn::after {
  opacity: 0;
  -webkit-transform: translateX(100%) translateX(5px);
  -ms-transform: translateX(100%) translateX(5px);
  transform: translateX(100%) translateX(5px);
}
.tagify__tag--editable.tagify--invalid > div::before {
  -webkit-box-shadow: 0 0 0 2px var(--tag-invalid-color) inset !important;
  box-shadow: 0 0 0 2px var(--tag-invalid-color) inset !important;
}
.tagify__tag__removeBtn {
  -webkit-box-ordinal-group: 6;
  -ms-flex-order: 5;
  order: 5;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 50px;
  cursor: pointer;
  font: 14px/1 Arial;
  background: var(--tag-remove-btn-bg);
  color: var(--tag-remove-btn-color);
  width: 14px;
  height: 14px;
  margin-right: 4.6666666667px;
  margin-left: auto;
  overflow: hidden;
  -webkit-transition: 0.2s ease-out;
  -o-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
}
.tagify__tag__removeBtn::after {
  content: "×";
  -webkit-transition: 0.3s, color 0s;
  -o-transition: 0.3s, color 0s;
  transition: 0.3s, color 0s;
}
.tagify__tag__removeBtn:hover {
  color: white;
  background: var(--tag-remove-btn-bg--hover);
}
.tagify__tag__removeBtn:hover + div > span {
  opacity: 0.5;
}
.tagify__tag__removeBtn:hover + div::before {
  -webkit-box-shadow: 0 0 0 var(--tag-inset-shadow-size) var(--tag-remove-bg, rgba(211, 148, 148, 0.3)) inset !important;
  box-shadow: 0 0 0 var(--tag-inset-shadow-size) var(--tag-remove-bg, rgba(211, 148, 148, 0.3)) inset !important;
  -webkit-transition: -webkit-box-shadow 0.2s;
  transition: -webkit-box-shadow 0.2s;
  -o-transition: box-shadow 0.2s;
  transition: box-shadow 0.2s;
  transition: box-shadow 0.2s, -webkit-box-shadow 0.2s;
}
.tagify:not(.tagify--mix) .tagify__input br {
  display: none;
}
.tagify:not(.tagify--mix) .tagify__input * {
  display: inline;
  white-space: nowrap;
}
.tagify__input {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: inline-block;
  min-width: 110px;
  margin: 5px;
  padding: var(--tag-pad);
  line-height: normal;
  position: relative;
  white-space: pre-wrap;
  color: var(--input-color);
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
  /* Seems firefox newer versions don't need this any more
  @supports ( -moz-appearance:none ){
      &::before{
          line-height: inherit;
          position:relative;
      }
  }
  */
}
@-moz-document url-prefix() {}
.tagify__input:empty::before {
  position: static;
}
.tagify__input:focus {
  outline: none;
}
.tagify__input:focus::before {
  -webkit-transition: 0.2s ease-out;
  -o-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
  opacity: 0;
  -webkit-transform: translatex(6px);
  -ms-transform: translatex(6px);
  transform: translatex(6px);
  /* ALL MS BROWSERS: hide placeholder (on focus) otherwise the caret is placed after it, which is weird */
  /* IE Edge 12+ CSS styles go here */
}
@supports (-ms-ime-align: auto) {
  .tagify__input:focus::before {
    display: none;
  }
}
.tagify__input:focus:empty::before {
  -webkit-transition: 0.2s ease-out;
  -o-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
  opacity: 1;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  color: rgba(0, 0, 0, 0.25);
  color: var(--placeholder-color-focus);
}
@-moz-document url-prefix() {
  .tagify__input:focus:empty::after {
    display: none;
  }
}
.tagify__input::before {
  content: attr(data-placeholder);
  height: 1em;
  line-height: 1em;
  margin: auto 0;
  z-index: 1;
  color: var(--placeholder-color);
  white-space: nowrap;
  pointer-events: none;
  opacity: 0;
  position: absolute;
}
.tagify__input::after {
  content: attr(data-suggest);
  display: inline-block;
  vertical-align: middle;
  position: absolute;
  min-width: calc(100% - 1.5em);
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: pre; /* allows spaces at the beginning */
  color: var(--tag-text-color);
  opacity: 0.3;
  pointer-events: none;
  max-width: 100px;
}
.tagify__input .tagify__tag {
  margin: 0 1px;
}
.tagify--mix {
  display: block;
}
.tagify--mix .tagify__input {
  padding: 5px;
  margin: 0;
  width: 100%;
  height: 100%;
  line-height: 1.5;
  display: block;
}
.tagify--mix .tagify__input::before {
  height: auto;
  display: none;
  line-height: inherit;
}
.tagify--mix .tagify__input::after {
  content: none;
}
.tagify--select::after {
  content: ">";
  opacity: 0.5;
  position: absolute;
  top: 50%;
  right: 0;
  bottom: 0;
  font: 16px monospace;
  line-height: 8px;
  height: 8px;
  pointer-events: none;
  -webkit-transform: translate(-150%, -50%) scaleX(1.2) rotate(90deg);
  -ms-transform: translate(-150%, -50%) scaleX(1.2) rotate(90deg);
  transform: translate(-150%, -50%) scaleX(1.2) rotate(90deg);
  -webkit-transition: 0.2s ease-in-out;
  -o-transition: 0.2s ease-in-out;
  transition: 0.2s ease-in-out;
}
.tagify--select[aria-expanded=true]::after {
  -webkit-transform: translate(-150%, -50%) rotate(270deg) scaleY(1.2);
  -ms-transform: translate(-150%, -50%) rotate(270deg) scaleY(1.2);
  transform: translate(-150%, -50%) rotate(270deg) scaleY(1.2);
}
.tagify--select .tagify__tag {
  position: absolute;
  top: 0;
  right: 1.8em;
  bottom: 0;
}
.tagify--select .tagify__tag div {
  display: none;
}
.tagify--select .tagify__input {
  width: 100%;
}
.tagify--empty .tagify__input::before {
  -webkit-transition: 0.2s ease-out;
  -o-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
  opacity: 1;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  display: inline-block;
  width: auto;
}
.tagify--mix .tagify--empty .tagify__input::before {
  display: inline-block;
}
.tagify--focus {
  --tags-border-color: var(--tags-focus-border-color);
  -webkit-transition: 0s;
  -o-transition: 0s;
  transition: 0s;
}
.tagify--invalid {
  --tags-border-color: #D39494;
}
.tagify__dropdown {
  position: absolute;
  z-index: 9999;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
  overflow: hidden;
}
.tagify__dropdown[placement=top] {
  margin-top: 0;
  -webkit-transform: translateY(-100%);
  -ms-transform: translateY(-100%);
  transform: translateY(-100%);
}
.tagify__dropdown[placement=top] .tagify__dropdown__wrapper {
  border-top-width: 1.1px;
  border-bottom-width: 0;
}
.tagify__dropdown[position=text] {
  -webkit-box-shadow: 0 0 0 3px rgba(var(--tagify-dd-color-primary), 0.1);
  box-shadow: 0 0 0 3px rgba(var(--tagify-dd-color-primary), 0.1);
  font-size: 0.9em;
}
.tagify__dropdown[position=text] .tagify__dropdown__wrapper {
  border-width: 1px;
}
.tagify__dropdown__wrapper {
  max-height: 300px;
  overflow: auto;
  overflow-x: hidden;
  background: var(--tagify-dd-bg-color);
  border: 1px solid;
  border-color: var(--tagify-dd-color-primary);
  border-bottom-width: 1.5px;
  border-top-width: 0;
  -webkit-box-shadow: 0 2px 4px -2px rgba(0, 0, 0, 0.2);
  box-shadow: 0 2px 4px -2px rgba(0, 0, 0, 0.2);
  -webkit-transition: 0.25s cubic-bezier(0, 1, 0.5, 1);
  -o-transition: 0.25s cubic-bezier(0, 1, 0.5, 1);
  transition: 0.25s cubic-bezier(0, 1, 0.5, 1);
}
.tagify__dropdown__header:empty {
  display: none;
}
.tagify__dropdown__footer {
  display: inline-block;
  margin-top: 0.5em;
  padding: var(--tagify-dd-item-pad);
  font-size: 0.7em;
  font-style: italic;
  opacity: 0.5;
}
.tagify__dropdown__footer:empty {
  display: none;
}
.tagify__dropdown--initial .tagify__dropdown__wrapper {
  max-height: 20px;
  -webkit-transform: translateY(-1em);
  -ms-transform: translateY(-1em);
  transform: translateY(-1em);
}
.tagify__dropdown--initial[placement=top] .tagify__dropdown__wrapper {
  -webkit-transform: translateY(2em);
  -ms-transform: translateY(2em);
  transform: translateY(2em);
}
.tagify__dropdown__item {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: var(--tagify-dd-item-pad);
  margin: 1px;
  cursor: pointer;
  border-radius: 2px;
  position: relative;
  outline: none;
  max-height: 60px;
  max-width: 100%;
  /* custom hidden transition effect is needed for horizontal-layout suggestions */
}
.tagify__dropdown__item--active {
  background: var(--tagify-dd-color-primary);
  color: white;
}
.tagify__dropdown__item:active {
  -webkit-filter: brightness(105%);
  filter: brightness(105%);
}
.tagify__dropdown__item--hidden {
  padding-top: 0;
  padding-bottom: 0;
  margin: 0 1px;
  pointer-events: none;
  overflow: hidden;
  max-height: 0;
  -webkit-transition: var(--tagify-dd-item--hidden-duration, 0.3s) !important;
  -o-transition: var(--tagify-dd-item--hidden-duration, 0.3s) !important;
  transition: var(--tagify-dd-item--hidden-duration, 0.3s) !important;
}
.tagify__dropdown__item--hidden > * {
  -webkit-transform: translateY(-100%);
  -ms-transform: translateY(-100%);
  transform: translateY(-100%);
  opacity: 0;
  -webkit-transition: inherit;
  -o-transition: inherit;
  transition: inherit;
}

/* Colors */
/* Global */
/* used for mini headers, alternate primary color */
/* compliments the primary color, usually used in combination */
/* for all other uses */
/* Lighter / Darker */
/* Text */
/* Damage */
/* ----------------------------------------- */
/* Color schemes                             */
/* ----------------------------------------- */
/* Proficiency ranks */
/* Rarities */
/* Degrees of success */
/* Value adjustments (e.g. weak/elite) */
/* ----------------------------------------- */
/* CSS Custom Properties                     */
/* ----------------------------------------- */
:root {
  /* Global */
  --primary: #5e0000;
  --secondary: #171f69;
  --tertiary: #E9D7A1;
  --alt: #786452;
  --alt-dark: #443730;
  --bg: #F8F4F1;
  --bg-dark: #e7d9cf;
  --sub: #605856;
  --color-disabled: #ababab;
  --inline-link-bg: #ddd;
  --inline-repost-bg: #eaeaea;
  --visibility-gm-bg: #e8e8ef;
  --visibility-owner-bg: #ddebe1;
  --blind-roll: #f5eaf5;
  /* Lighter / Darker */
  --light: #910000;
  --dark: #2b0000;
  --tertiary-dark: #dfc578;
  --tertiary-light: #f3e9ca;
  /* Text */
  --body: var(--text-dark);
  --color-text-trait: #f5efe0;
  --text-dark: #1C1C1C;
  --text-light: white;
  /* Borders */
  --color-border-trait: #d8c384;
  --color-border-divider: #baa991;
  /* Headers w/ boxes */
  --header-color: var(--text-light);
  --header-bg: var(--secondary);
  /* Sidebar */
  --sidebar-label: var(--tertiary-dark);
  --sidebar-title: var(--tertiary);
}

/* Global styles */
.window-app {
  font-family: "Roboto", sans-serif;
}

.rollable:hover, .rollable:focus {
  color: #000;
  text-shadow: 0 0 10px red;
  cursor: pointer;
}

.grid,
.grid-2col {
  display: grid;
  grid-column: span 2/span 2;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 10px;
  margin: 10px 0;
  padding: 0;
}

.grid-3col {
  grid-column: span 3/span 3;
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid-4col {
  grid-column: span 4/span 4;
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

.grid-5col {
  grid-column: span 5/span 5;
  grid-template-columns: repeat(5, minmax(0, 1fr));
}

.grid-6col {
  grid-column: span 6/span 6;
  grid-template-columns: repeat(6, minmax(0, 1fr));
}

.grid-7col {
  grid-column: span 7/span 7;
  grid-template-columns: repeat(7, minmax(0, 1fr));
}

.grid-8col {
  grid-column: span 8/span 8;
  grid-template-columns: repeat(8, minmax(0, 1fr));
}

.grid-9col {
  grid-column: span 9/span 9;
  grid-template-columns: repeat(9, minmax(0, 1fr));
}

.grid-10col {
  grid-column: span 10/span 10;
  grid-template-columns: repeat(10, minmax(0, 1fr));
}

.grid-11col {
  grid-column: span 11/span 11;
  grid-template-columns: repeat(11, minmax(0, 1fr));
}

.grid-12col {
  grid-column: span 12/span 12;
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

.grid-start-2 {
  grid-column-start: 2;
}

.grid-start-3 {
  grid-column-start: 3;
}

.grid-start-4 {
  grid-column-start: 4;
}

.grid-start-5 {
  grid-column-start: 5;
}

.grid-start-6 {
  grid-column-start: 6;
}

.grid-start-7 {
  grid-column-start: 7;
}

.grid-start-8 {
  grid-column-start: 8;
}

.grid-start-9 {
  grid-column-start: 9;
}

.grid-start-10 {
  grid-column-start: 10;
}

.grid-start-11 {
  grid-column-start: 11;
}

.grid-start-12 {
  grid-column-start: 12;
}

.grid-span-2 {
  grid-column-end: span 2;
}

.grid-span-3 {
  grid-column-end: span 3;
}

.grid-span-4 {
  grid-column-end: span 4;
}

.grid-span-5 {
  grid-column-end: span 5;
}

.grid-span-6 {
  grid-column-end: span 6;
}

.grid-span-7 {
  grid-column-end: span 7;
}

.grid-span-8 {
  grid-column-end: span 8;
}

.grid-span-9 {
  grid-column-end: span 9;
}

.grid-span-10 {
  grid-column-end: span 10;
}

.grid-span-11 {
  grid-column-end: span 11;
}

.grid-span-12 {
  grid-column-end: span 12;
}

.grid-defence {
  display: grid;
  grid-template-columns: 1fr 10fr;
}

.grid-defence-elements {
  display: grid;
  grid-template-columns: 3fr 1fr 3fr repeat(8, minmax(0, 3fr));
}

.grid-defence-elements input,
.resource-label {
  text-align: center;
  vertical-align: middle;
}

.defence-span {
  text-align: center;
}

.defence-name,
.defence-part {
  display: table;
}

.defence-name label,
.defence-part label {
  display: table-cell;
  text-align: center;
  vertical-align: middle;
}

hr.defence-divider {
  border-top: 1px dashed var(--color-underline-header);
}

.conditions-grid {
  display: grid;
  grid-template-columns: 1fr 2fr;
}

.item-rule-grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  padding-bottom: 10px;
}

.item-rule-grid.rule-type {
  display: grid;
  grid-area: 1/1/2/2;
}

.item-rule-grid.rule-name {
  display: grid;
  grid-area: 2/1/3/2;
}

.rule-name {
  width: 100%;
  display: grid;
}

.item-rule-grid.rule-content {
  display: grid;
  grid-area: 1/3/3/5;
}

.item-rule-grid.rule-delete {
  display: grid;
  grid-area: 1/5/3/6;
}

.flex-group-center,
.flex-group-left,
.flex-group-right {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
}

.flex-group-left {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  text-align: left;
}

.flex-group-right {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  text-align: right;
}

.flexshrink {
  -webkit-box-flex: 0;
  -ms-flex: 0;
  flex: 0;
}

.flex-between {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.flexlarge {
  -webkit-box-flex: 2;
  -ms-flex: 2;
  flex: 2;
}

.align-left {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  text-align: left;
}

.align-right {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  text-align: right;
}

.align-center {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  text-align: center;
}

/* Styles limited to abbrew sheets */
.abbrew { /* ----------------------------------------- */
  /*  Items Lists                              */
  /* ----------------------------------------- */
  /* Example style for Abbrew (can be removed if not needed) */
}
.abbrew .item-form {
  font-family: "Roboto", sans-serif;
}
.abbrew .sheet-header {
  -webkit-box-flex: 0;
  -ms-flex: 0 auto;
  flex: 0 auto;
  overflow: hidden;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  margin-bottom: 10px;
}
.abbrew .sheet-header .profile-img {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 100px;
  flex: 0 0 100px;
  height: 100px;
  margin-right: 10px;
}
.abbrew .sheet-header .header-fields {
  -webkit-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
}
.abbrew .sheet-header h1.charname {
  height: 50px;
  padding: 0px;
  margin: 5px 0;
  border-bottom: 0;
}
.abbrew .sheet-header h1.charname input {
  width: 100%;
  height: 100%;
  margin: 0;
}
.abbrew .sheet-tabs {
  -webkit-box-flex: 0;
  -ms-flex: 0;
  flex: 0;
}
.abbrew .sheet-body,
.abbrew .sheet-body .tab,
.abbrew .sheet-body .tab .editor {
  height: 100%;
}
.abbrew .tox .tox-editor-container {
  background: #fff;
}
.abbrew .tox .tox-edit-area {
  padding: 0 8px;
}
.abbrew .resource-label {
  font-weight: bold;
}
.abbrew .items-header {
  height: 28px;
  margin: 2px 0;
  padding: 0;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: rgba(0, 0, 0, 0.05);
  border: 2px groove #eeede0;
  font-weight: bold;
}
.abbrew .items-header > * {
  font-size: 14px;
  text-align: center;
}
.abbrew .items-header .item-name {
  font-weight: bold;
  padding-left: 5px;
  text-align: left;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.abbrew .items-list {
  list-style: none;
  margin: 0;
  padding: 0;
  overflow-y: auto;
  scrollbar-width: thin;
  color: #444;
}
.abbrew .items-list .item-list {
  list-style: none;
  margin: 0;
  padding: 0;
}
.abbrew .items-list .item-name {
  -webkit-box-flex: 2;
  -ms-flex: 2;
  flex: 2;
  margin: 0;
  overflow: hidden;
  font-size: 13px;
  text-align: left;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.abbrew .items-list .item-name h3, .abbrew .items-list .item-name h4 {
  margin: 0;
  white-space: nowrap;
  overflow-x: hidden;
}
.abbrew .items-list .item-controls {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
  -ms-flex: 0 0 100px;
  flex: 0 0 100px;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}
.abbrew .items-list .item-controls a {
  font-size: 12px;
  text-align: center;
  margin: 0 6px;
}
.abbrew .items-list .item {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 2px;
  border-bottom: 1px solid #c9c7b8;
}
.abbrew .items-list .item:last-child {
  border-bottom: none;
}
.abbrew .items-list .item .item-name {
  color: #191813;
}
.abbrew .items-list .item .item-name .item-image {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 30px;
  flex: 0 0 30px;
  height: 30px;
  background-size: 30px;
  border: none;
  margin-right: 5px;
}
.abbrew .items-list .item-prop {
  text-align: center;
  border-left: 1px solid #c9c7b8;
  border-right: 1px solid #c9c7b8;
  font-size: 12px;
}
.abbrew .items-list .items-header {
  height: 28px;
  margin: 2px 0;
  padding: 0;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: rgba(0, 0, 0, 0.05);
  border: 2px groove #eeede0;
  font-weight: bold;
}
.abbrew .items-list .items-header > * {
  font-size: 12px;
  text-align: center;
}
.abbrew .items-list .items-header .item-name {
  padding-left: 5px;
  text-align: left;
}
.abbrew .item-formula {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 200px;
  flex: 0 0 200px;
  padding: 0 8px;
}
.abbrew .effects .item .effect-source,
.abbrew .effects .item .effect-duration,
.abbrew .effects .item .effect-controls {
  text-align: center;
  border-left: 1px solid #c9c7b8;
  border-right: 1px solid #c9c7b8;
  font-size: 12px;
}
.abbrew .effects .item .effect-controls {
  border: none;
}
.abbrew .message-content .damage-roll:not(:first-child) {
  margin-top: 1em;
}
.abbrew .message-content .damage-roll .dice-result .dice-formula {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  gap: 0.25em;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.abbrew .message-content .damage-roll .dice-result .dice-formula .instance {
  padding: 0 0.25em;
}
.abbrew .message-content .damage-roll .dice-result .dice-total {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  font-weight: normal;
}
.abbrew .message-content .damage-roll .dice-result .dice-total .total {
  font-weight: 700;
  padding: 0 2ch;
}
.abbrew .message-content .damage-roll .dice-result .dice-total .total .increased-from {
  color: var(--color-text-dark-2);
  font-size: var(--font-size-16);
  font-weight: normal;
  vertical-align: 15%;
}
.abbrew .message-content .damage-roll .dice-result .dice-total .instances {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  font-size: var(--font-size-12);
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  line-height: var(--font-size-12);
  margin-bottom: 0.2em;
  vertical-align: top;
}
.abbrew .message-content .damage-roll .dice-result .dice-total .instances .instance {
  padding: 0.15em 0.25em;
}
.abbrew .message-content .damage-roll .dice-result .dice-tooltip {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.25em;
  margin-bottom: 0.25em;
}
.abbrew .message-content .damage-roll .dice-result .dice-tooltip .instance {
  border-radius: 2px;
  border-style: solid;
  border-width: 1px;
}
.abbrew .message-content .damage-roll .dice-result .dice-tooltip .instance > header {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.1em;
}
.abbrew .message-content .damage-roll .dice-result .dice-tooltip .instance .dice .part-formula, .abbrew .message-content .damage-roll .dice-result .dice-tooltip .instance .dice .part-total {
  color: var(--color-text-dark-secondary);
}
.abbrew .message-content .damage-roll .dice-result .dice-tooltip .instance > header, .abbrew .message-content .damage-roll .dice-result .dice-tooltip .instance .dice {
  padding: 0.2em;
}
.abbrew .message-content .damage-roll .dice-result .instance {
  white-space: nowrap;
}
.abbrew .message-content .damage-roll .dice-result .instance:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.tooltip-part > header {
  background: rgba(60, 60, 60, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.acid {
  border-color: #007300;
  color: #003300;
}
.abbrew .message-content .damage-roll .dice-result .instance.acid:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.acid.tooltip-part > header {
  background: rgba(0, 115, 0, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.acid .icon {
  color: #007300;
}
.abbrew .message-content .damage-roll .dice-result .instance.bleed {
  border-color: #99001a;
  color: #59000f;
}
.abbrew .message-content .damage-roll .dice-result .instance.bleed:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.bleed.tooltip-part > header {
  background: rgba(153, 0, 26, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.bleed .icon {
  color: #99001a;
}
.abbrew .message-content .damage-roll .dice-result .instance.bludgeoning {
  border-color: #3c3c3c;
  color: #1c1c1c;
}
.abbrew .message-content .damage-roll .dice-result .instance.bludgeoning:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.bludgeoning.tooltip-part > header {
  background: rgba(60, 60, 60, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.bludgeoning .icon {
  color: #3c3c3c;
}
.abbrew .message-content .damage-roll .dice-result .instance.chaotic {
  border-color: #a600a6;
  color: #660066;
}
.abbrew .message-content .damage-roll .dice-result .instance.chaotic:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.chaotic.tooltip-part > header {
  background: rgba(166, 0, 166, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.chaotic .icon {
  color: #a600a6;
}
.abbrew .message-content .damage-roll .dice-result .instance.cold {
  border-color: #2f2fa6;
  color: #212174;
}
.abbrew .message-content .damage-roll .dice-result .instance.cold:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.cold.tooltip-part > header {
  background: rgba(47, 47, 166, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.cold .icon {
  color: #2f2fa6;
}
.abbrew .message-content .damage-roll .dice-result .instance.electricity {
  border-color: darkgoldenrod;
  color: #7c5a07;
}
.abbrew .message-content .damage-roll .dice-result .instance.electricity:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.electricity.tooltip-part > header {
  background: rgba(184, 134, 11, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.electricity .icon {
  color: darkgoldenrod;
}
.abbrew .message-content .damage-roll .dice-result .instance.evil {
  border-color: indigo;
  color: #260042;
}
.abbrew .message-content .damage-roll .dice-result .instance.evil:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.evil.tooltip-part > header {
  background: rgba(75, 0, 130, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.evil .icon {
  color: indigo;
}
.abbrew .message-content .damage-roll .dice-result .instance.fire {
  border-color: #a62f00;
  color: #661d00;
}
.abbrew .message-content .damage-roll .dice-result .instance.fire:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.fire.tooltip-part > header {
  background: rgba(166, 47, 0, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.fire .icon {
  color: #a62f00;
}
.abbrew .message-content .damage-roll .dice-result .instance.force {
  border-color: #6300aa;
  color: #3e006a;
}
.abbrew .message-content .damage-roll .dice-result .instance.force:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.force.tooltip-part > header {
  background: rgba(99, 0, 170, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.force .icon {
  color: #6300aa;
}
.abbrew .message-content .damage-roll .dice-result .instance.good {
  border-color: #9d730a;
  color: #614706;
}
.abbrew .message-content .damage-roll .dice-result .instance.good:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.good.tooltip-part > header {
  background: rgba(157, 115, 10, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.good .icon {
  color: #9d730a;
}
.abbrew .message-content .damage-roll .dice-result .instance.lawful {
  border-color: #402600;
  color: black;
}
.abbrew .message-content .damage-roll .dice-result .instance.lawful:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.lawful.tooltip-part > header {
  background: rgba(64, 38, 0, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.lawful .icon {
  color: #402600;
}
.abbrew .message-content .damage-roll .dice-result .instance.mental {
  border-color: midnightblue;
  color: #0d0d3c;
}
.abbrew .message-content .damage-roll .dice-result .instance.mental:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.mental.tooltip-part > header {
  background: rgba(25, 25, 112, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.mental .icon {
  color: midnightblue;
}
.abbrew .message-content .damage-roll .dice-result .instance.negative {
  border-color: #00001f;
  color: #00001f;
}
.abbrew .message-content .damage-roll .dice-result .instance.negative:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.negative.tooltip-part > header {
  background: rgba(0, 0, 31, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.negative .icon {
  color: #00001f;
}
.abbrew .message-content .damage-roll .dice-result .instance.piercing {
  border-color: #3c3c3c;
  color: #1c1c1c;
}
.abbrew .message-content .damage-roll .dice-result .instance.piercing:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.piercing.tooltip-part > header {
  background: rgba(60, 60, 60, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.piercing .icon {
  color: #3c3c3c;
}
.abbrew .message-content .damage-roll .dice-result .instance.poison {
  border-color: #5b7332;
  color: #38471f;
}
.abbrew .message-content .damage-roll .dice-result .instance.poison:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.poison.tooltip-part > header {
  background: rgba(91, 115, 50, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.poison .icon {
  color: #5b7332;
}
.abbrew .message-content .damage-roll .dice-result .instance.positive {
  border-color: #ffffe0;
  color: #ffffa0;
}
.abbrew .message-content .damage-roll .dice-result .instance.positive:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.positive.tooltip-part > header {
  background: rgba(255, 255, 224, 0.125);
  text-shadow: 1px 1px black;
}
.abbrew .message-content .damage-roll .dice-result .instance.positive .icon {
  color: #ffffe0;
}
.abbrew .message-content .damage-roll .dice-result .instance.slashing {
  border-color: #3c3c3c;
  color: #1c1c1c;
}
.abbrew .message-content .damage-roll .dice-result .instance.slashing:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.slashing.tooltip-part > header {
  background: rgba(60, 60, 60, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.slashing .icon {
  color: #3c3c3c;
}
.abbrew .message-content .damage-roll .dice-result .instance.sonic {
  border-color: darkcyan;
  color: #004b4b;
}
.abbrew .message-content .damage-roll .dice-result .instance.sonic:not(.tooltip-part), .abbrew .message-content .damage-roll .dice-result .instance.sonic.tooltip-part > header {
  background: rgba(0, 139, 139, 0.125);
}
.abbrew .message-content .damage-roll .dice-result .instance.sonic .icon {
  color: darkcyan;
}
.abbrew .message-content .damage-roll .dice-result .instance .precision, .abbrew .message-content .damage-roll .dice-result .instance .splash {
  border-color: inherit;
  border-width: 1px;
  border-style: dotted;
  padding: 1px 2px;
  line-height: 0;
}
.abbrew .message-content .damage-roll .dice-result .dice-tooltip .damage-type {
  margin-bottom: 3px;
}
.abbrew .message-content .damage-roll .dice-result .dice-tooltip .damage-type h3 {
  text-transform: capitalize;
  padding-left: 3px;
  padding-right: 1px;
}
.abbrew .message-content .damage-roll .dice-result .dice-tooltip .damage-type i.fa {
  -webkit-box-flex: 0;
  -ms-flex: none;
  flex: none;
  margin: 2px;
}
.abbrew .message-content .damage-roll .dice-result .dice-tooltip .damage-type .dice {
  margin-left: 2px;
  margin-right: 2px;
}
.abbrew .message-content .damage-roll .dice-result .dice-tooltip .dice .part-header .part-flavor {
  text-transform: capitalize;
}
.abbrew .message-content .damage-application {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-top: 3px;
  -webkit-box-ordinal-group: 4;
  -ms-flex-order: 3;
  order: 3;
}
.abbrew .message-content .damage-application button {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  font-size: var(--font-size-18);
  height: 2em;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  line-height: unset;
  padding: 0;
}
.abbrew .message-content .damage-application button.half-damage {
  position: relative;
}
.abbrew .message-content .damage-application button.half-damage .transparent-half {
  background: rgb(248, 247, 233);
  display: block;
  height: 24px;
  left: 49%;
  opacity: 0.6;
  position: absolute;
  top: 0px;
  width: 10px;
}
.abbrew .message-content .damage-application button > img {
  border: none;
  height: var(--font-size-18);
}
.abbrew .message-content .damage-application button.heal-damage .fa-stack {
  font-size: 0.5em;
}
.abbrew .message-content .damage-application button.heal-damage .fa-stack i.fa-plus {
  font-size: var(--font-size-10);
}
.abbrew .message-content .damage-application button .label {
  font-size: var(--font-size-9);
  font-weight: 500;
  text-transform: uppercase;
}
.abbrew .message-content .damage-taken .persistent {
  font-style: normal;
  margin-top: 1em;
}
.abbrew .message-content .damage-taken .persistent h4 {
  border-bottom: 1px solid var(--color-underline-header);
  max-width: -webkit-fit-content;
  max-width: -moz-fit-content;
  max-width: fit-content;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
